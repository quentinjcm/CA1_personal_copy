# <- deontes a comment

#transformation types set and reset transformation from world coordinates
#TRANSLATE: <x> <y> <z>
#ROTATE: <x> <y> <z>

#creating geometry
#sphere and plane use procedurally generated triangle meshes with uvs and texture coordinates
#PLANE: <w> <h>
#SPHERE: <sd> <r>

#obj meshes can also be imported, make sure that meshes are triangulated before importing
#OBJ <path/to/file.obj>

#setting materials
#any geometry specified will have the last specified material attached to it, with a default material being used if nothing
#MATERIAL: <r> <g> <b> <smoothness> <ior> <isTransparent> <isReflective> (<textureFile>)

#adding lights
#only supports point lights so far
#positions are specified in world space
#LIGHT: <x> <y> <z> <r> <g> <b> <intensity>

PLANE: 50 50

#ROTATE: 0 0 45
#TRANSLATE: 50 50 0
#PLANE: 12 12

#ROTATE: 90 0 0
#TRANSLATE: 0 6 -6
#PLANE: 12 12


#MAT: 1 1 1 140 3 0 0

#TRANSLATE: 0 2 0
#SPHERE: 30 2


MAT: 0 0 0 140 1.8 0 1 textures/texture.png
OBJ: scenes/bot.obj

LIGHT: 3 6 5 1 1 1 2


